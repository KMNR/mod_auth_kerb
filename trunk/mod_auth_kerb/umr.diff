diff -x .svn -ur -h mod_auth_kerb-5.0rc7-orig/src/mod_auth_kerb.c mod_auth_kerb-5.0rc7/src/mod_auth_kerb.c
--- mod_auth_kerb-5.0rc7-orig/src/mod_auth_kerb.c	2006-02-28 17:01:44.000000000 -0600
+++ mod_auth_kerb-5.0rc7/src/mod_auth_kerb.c	2006-04-10 18:37:49.000000000 -0500
@@ -149,6 +149,7 @@
  ***************************************************************************/
 typedef struct {
 	char *krb_auth_realms;
+	char *krb_strip_realms;
 	int krb_save_credentials;
 	int krb_verify_kdc;
 	const char *krb_service_name;
@@ -175,6 +176,9 @@
 static const char*
 krb5_save_realms(cmd_parms *cmd, void *sec, const char *arg);
 
+static const char*
+krb5_strip_realms(cmd_parms *cmd, kerb_auth_config *sec, const char *arg);
+
 #ifdef STANDARD20_MODULE_STUFF
 #define command(name, func, var, type, usage)           \
   AP_INIT_ ## type (name, (void*) func,                 \
@@ -194,6 +198,12 @@
    command("KrbAuthRealm", krb5_save_realms, krb_auth_realms,
      RAW_ARGS, "Alias for KrbAuthRealms."),
 
+   command("KrbStripRealms", krb5_strip_realms, krb_strip_realms,
+     RAW_ARGS, "Realms to strip from authentication userid."),
+
+   command("KrbStripRealm", krb5_strip_realms, krb_strip_realms,
+     RAW_ARGS, "Alias for KrbStripRealms."),
+
    command("KrbSaveCredentials", ap_set_flag_slot, krb_save_credentials,
      FLAG, "Save and store credentials/tickets retrieved during auth."),
 
@@ -333,6 +343,13 @@
    return NULL;
 }
 
+static const char*
+krb5_strip_realms(cmd_parms *cmd, kerb_auth_config *sec, const char *arg)
+{
+   sec->krb_strip_realms= ap_pstrdup(cmd->pool, arg);
+   return NULL;
+}
+
 static void
 log_rerror(const char *file, int line, int level, int status,
            const request_rec *r, const char *fmt, ...)
@@ -1019,6 +1036,31 @@
    ret = OK;
 
 end:
+   if (ret == OK) { 
+      realms = conf->krb_strip_realms;
+      do {
+         char *rp;
+       
+         if (realms && (realm = ap_getword_white(r->pool, &realms))) {
+            char *rp = strchr(MK_USER, '@');
+            if ( rp && !strcmp(realm, "*") ) {
+               *rp = '\0';
+               break;
+            }
+            else if (rp && !strcasecmp(rp + 1, realm)) {
+               *rp = '\0';
+               break;
+            }
+            else if ( !rp ) {
+               break;
+            }
+         }
+
+         /* ap_getword_white() used above shifts the parameter, so it's not
+            needed to touch the realms variable */
+      } while (realms && *realms);
+   } 
+
    log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,
 	      "kerb_authenticate_user_krb5pwd ret=%d user=%s authtype=%s",
 	      ret, (MK_USER)?MK_USER:"(NULL)", (MK_AUTH_TYPE)?MK_AUTH_TYPE:"(NULL)");
