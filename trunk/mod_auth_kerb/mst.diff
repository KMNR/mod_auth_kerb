diff -x .svn -ur -h mod_auth_kerb-5.4-orig/src/mod_auth_kerb.c mod_auth_kerb-5.4/src/mod_auth_kerb.c
--- mod_auth_kerb-5.4-orig/src/mod_auth_kerb.c	2010-07-19 09:34:26.975778361 -0500
+++ mod_auth_kerb-5.4/src/mod_auth_kerb.c	2012-02-27 10:00:45.124726574 -0600
@@ -152,6 +152,7 @@
  ***************************************************************************/
 typedef struct {
 	char *krb_auth_realms;
+	char *krb_strip_realms;
 	int krb_save_credentials;
 	int krb_verify_kdc;
 	const char *krb_service_name;
@@ -186,6 +187,9 @@
 static const char*
 krb5_save_realms(cmd_parms *cmd, void *sec, const char *arg);
 
+static const char*
+krb5_strip_realms(cmd_parms *cmd, kerb_auth_config *sec, const char *arg);
+
 #ifdef STANDARD20_MODULE_STUFF
 #define command(name, func, var, type, usage)           \
   AP_INIT_ ## type (name, (void*) func,                 \
@@ -205,6 +209,12 @@
    command("KrbAuthRealm", krb5_save_realms, krb_auth_realms,
      RAW_ARGS, "Alias for KrbAuthRealms."),
 
+   command("KrbStripRealms", krb5_strip_realms, krb_strip_realms,
+     RAW_ARGS, "Realms to strip from authentication userid."),
+
+   command("KrbStripRealm", krb5_strip_realms, krb_strip_realms,
+     RAW_ARGS, "Alias for KrbStripRealms."),
+
    command("KrbSaveCredentials", ap_set_flag_slot, krb_save_credentials,
      FLAG, "Save and store credentials/tickets retrieved during auth."),
 
@@ -343,7 +353,29 @@
 krb5_save_realms(cmd_parms *cmd, void *vsec, const char *arg)
 {
    kerb_auth_config *sec = (kerb_auth_config *) vsec;
+
+/*
+ if this says UMSYSTEM, use this compiled in default list
+*/
+ 
+   if ( !strcmp(arg, "UMSYSTEM") )
+   {
+    sec->krb_auth_realms= apr_pstrdup(cmd->pool, 
+   "MST.EDU COL.MISSOURI.EDU TIG.MIZZOU.EDU UM.UMSYSTEM.EDU "
+   "UMAC.UMSYSTEM.EDU KC.UMKC.EDU UMAD.UMSYSTEM.EDU "
+   "STL.UMSL.EDU UMH.EDU");
+   }
+   else
+   {
    sec->krb_auth_realms= apr_pstrdup(cmd->pool, arg);
+   }
+   return NULL;
+}
+ 
+static const char*
+krb5_strip_realms(cmd_parms *cmd, kerb_auth_config *sec, const char *arg)
+{
+   sec->krb_strip_realms= apr_pstrdup(cmd->pool, arg);
    return NULL;
 }
 
@@ -946,6 +978,7 @@
    char            *name = NULL;
    int             all_principals_unkown;
    char            *p = NULL;
+   int             i;
 
    code = krb5_init_context(&kcontext);
    if (code) {
@@ -1070,6 +1103,43 @@
    ret = OK;
 
 end:
+   if (ret == OK) { 
+      realms = conf->krb_strip_realms;
+      do {
+         char *rp;
+       
+         if (realms && (realm = ap_getword_white(r->pool, &realms))) {
+            char *rp = strchr(MK_USER, '@');
+            if ( rp && !strcmp(realm, "*") ) {
+               *rp = '\0';
+               break;
+            }
+            else if (rp && !strcasecmp(rp + 1, realm)) {
+               *rp = '\0';
+               break;
+            }
+            else if ( !rp ) {
+               break;
+            }
+         }
+
+         /* ap_getword_white() used above shifts the parameter, so it's not
+            needed to touch the realms variable */
+      } while (realms && *realms);
+
+      /* force userid component to lowercase */
+      for (i=0; i>=0 && i<strlen(MK_USER); i++) {
+        if ( MK_USER[i] == '@' )
+        {
+            i = -1;
+        }
+        else
+        {
+            MK_USER[i] = tolower(MK_USER[i]);
+        }
+      }
+   } 
+
    log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,
 	      "kerb_authenticate_user_krb5pwd ret=%d user=%s authtype=%s",
 	      ret, (MK_USER)?MK_USER:"(NULL)", (MK_AUTH_TYPE)?MK_AUTH_TYPE:"(NULL)");
